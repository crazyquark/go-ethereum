contract TradeFinance {
    uint deliveryStatus;				//1 = at seller ; 2 = handed over to shipper ; 3 = on board
    bytes32 packinglist;
    uint lastShipmentDate;
    address addressSeller;
    address addressBuyer;
    address addressCarrier;
    uint approvalContractConditionsSeller;		//1 = not defined ; 2 = approved
    uint approvalContractConditionsBuyer;		//1 = not defined ; 2 = approved
    uint approvalContractConditions;			//1 = not defined ; 2 = approved
    uint outcomeProvidedForShipping;			//1 = goods are not on provided for shipping according to conditions;
    											//2 = goods are provided for shipping according to conditions
    uint outcomeOnBoard;						//1 = goods are not on board according to conditions; 2 = goods are on board according to conditions
    uint outcomePackinglist;					//1 = final packing list is nog confirmed; 2 = packinglist is confirmed
    uint outcomeContract;						//1 = contract conditions are not met; 2 = all contract conditions are met


    function newTrade(bytes32 pl, uint lsd, address adrs, address adrb, address adrc){
		deliveryStatus = 1;
		packinglist = pl;
		lastShipmentDate = lsd;
		addressBuyer = adrb;
		addressSeller = adrs;
		addressCarrier = adrc;
//		addressBuyer = 0x138f24d1dd8671bfbdf277637e2efeeddf30f928;
//		addressSeller = 0xdc1b153bc12cb8c6429026d0e4a59db57a5dabac;
//		addressCarrier = 0x2628b974490f57aa94f2e9e6fc2aafe0af477cb6;
		approvalContractConditionsSeller = 1;
		approvalContractConditionsBuyer = 1;
		approvalContractConditions = 1;
		outcomeContract = 1;
		outcomeProvidedForShipping = 1;
		outcomeOnBoard = 1;
		outcomePackinglist = 1;
    }


//seller and buyer have to sign for the contract conditions
	function ApproveContractConditions() {
		if (msg.sender == addressSeller) {approvalContractConditionsSeller = 2;}
		if (msg.sender == addressBuyer) {approvalContractConditionsBuyer = 2;}
		determineContractConditions();
	}



    function setPackinglistStatus(uint newStatus){
    	if (msg.sender == addressSeller){
	    	outcomePackinglist = newStatus;
    	}
    }


    function setDeliveryStatus(uint newStatus) {
    	if (msg.sender == addressCarrier){
        	deliveryStatus = newStatus;
        	if (newStatus == 3 && block.timestamp <= lastShipmentDate) {
        		outcomeOnBoard = 2;
        		determineOutcome();
        		return;
        	}
        	if (newStatus == 2) {
        		outcomeProvidedForShipping = 2;
        		return;
        	}
    	}
    }



	function determineContractConditions() returns (uint resCon) {
		if (approvalContractConditionsSeller == 2 && approvalContractConditionsBuyer == 2) {return approvalContractConditions = 2;}
		return approvalContractConditions = 1;
	}


    function determineOutcome() returns (uint resOut) {
    	if (outcomePackinglist == 2 && outcomeProvidedForShipping == 2 && outcomeOnBoard == 2 && approvalContractConditions == 2) {outcomeContract = 2;}
    	return outcomeContract;
    }

    function get() constant returns (string retVal) {
        if (outcomeContract == 2) {return "voldoet";}
		if (outcomeContract == 1) {return "voldoet niet";}
		{return "resultaat onbekend";}
    }

}
